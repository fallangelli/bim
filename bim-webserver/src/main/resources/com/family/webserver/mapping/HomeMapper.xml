<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.family.webserver.mapper.HomeMapper">

  <resultMap type="com.family.webserver.entity.CityWithArea" id="cityWithAreaMap">
    <id column="id" property="id"/>
    <result column="name" property="name"/>
    <result column="first_letter" property="firstLetter"/>
    <result column="pinyin" property="pinyin"/>
    <collection property="areas" ofType="com.family.webserver.entity.CityArea" column="city_id">
      <id column="area_id" property="id"/>
      <result column="city_id" property="cityId"/>
      <result column="area" property="area"/>
    </collection>
  </resultMap>

  <resultMap type="com.family.webserver.entity.ListCity" id="cityGroupFL">
    <id column="fl" property="firstLetter"/>
    <collection property="cities" ofType="com.family.webserver.entity.City" column="fl">
      <id column="id" property="id"/>
      <result column="fl" property="firstLetter"/>
      <result column="name" property="name"/>
      <result column="pinyin" property="pinyin"/>
    </collection>
  </resultMap>

  <select id="selectHomeHotMoviesByCity" parameterType="java.lang.Integer"
          resultType="com.family.webserver.entity.CityHotMovie">
    SELECT
      ct.id      AS     cityId,
      s.movie_id AS     movieId,
      m.name     AS     movieName,
      m.image,
      m.content,
      m.rating   AS     rating,
      min(s.sale_price) minPrice,
      count(s.movie_id) screeningCount
    FROM screening s
      INNER JOIN cinema cn ON s.cinema_id = cn.id
      INNER JOIN city_area ca ON cn.district_id = ca.id
      INNER JOIN city ct ON ca.city_id = ct.id
      INNER JOIN movieshowing m ON s.movie_id = m.id
    WHERE ct.id = #{id,jdbcType=INTEGER} AND to_days(s.show_date) >= to_days(now()) AND s.sale_price > 0
    GROUP BY s.movie_id
    ORDER BY count(*) DESC
    LIMIT 6
  </select>

  <select id="selectCityIdFromName" parameterType="java.lang.String"
          resultType="Integer">
    SELECT c.id
    FROM city c
    WHERE #{cityName,jdbcType=VARCHAR} LIKE concat('%', c.name, '%')
  </select>

  <select id="selectCityInfo" parameterType="java.lang.Integer"
          resultMap="cityWithAreaMap">
    SELECT
      c.id,
      c.name,
      c.first_letter,
      c.pinyin,
      ca.id AS area_id,
      ca.city_id,
      ca.area
    FROM city c
      LEFT JOIN city_area ca ON c.id = ca.city_id
    WHERE c.id = #{cityId,jdbcType=INTEGER}
  </select>

  <select id="selectNearCinemas"
          resultType="com.family.webserver.entity.Cinema">
    SELECT
    <if test="lat!=null and lat!='' and lng!=null and lng!=''">
      GLength(LineStringFromWKB(LineString(point(#{lat,jdbcType=VARCHAR}, #{lng,jdbcType=VARCHAR}), pos))) len,
    </if>
    cn.*
    FROM cinema cn
    left join city_area ca on cn.district_id = ca.id
    WHERE ca.city_id = #{cityId,jdbcType=INTEGER}
    <if test="lat!=null and lat!='' and lng!=null and lng!=''">
      ORDER BY len
    </if>
    LIMIT 3

  </select>


  <select id="selectCitiesGroupFL" resultMap="cityGroupFL">
    SELECT
      id,
    '热门' fl,
      name,
      pinyin
    FROM city
    WHERE name LIKE '%北京%'
    UNION SELECT
            id,
    '热门' fl,
            name,
            pinyin
          FROM city
          WHERE name LIKE '%上海%'
    UNION SELECT
            id,
    '热门' fl,
            name,
            pinyin
          FROM city
    WHERE name LIKE '%深圳%'
    UNION SELECT
            id,
    '热门' fl,
            name,
            pinyin
          FROM city
          WHERE name LIKE '%广州%'
    UNION SELECT
            id,
    '热门' fl,
            name,
            pinyin
          FROM city
          WHERE name LIKE '%成都%'
    UNION SELECT
            id,
    '热门' fl,
            name,
            pinyin
          FROM city
          WHERE name LIKE '%武汉%'
    UNION SELECT
            id,
    '热门' fl,
            name,
            pinyin
          FROM city
          WHERE name LIKE '%重庆%'
    UNION SELECT
            id,
    '热门' fl,
            name,
            pinyin
          FROM city
          WHERE name LIKE '%杭州%'
    UNION SELECT
    id,
    '热门' fl,
    name,
    pinyin
    FROM city
    WHERE name LIKE '%南京%'
    UNION SELECT
    id,
    '热门' fl,
    name,
    pinyin
    FROM city
    WHERE name LIKE '%天津%'
    UNION
    SELECT DISTINCT
      c1.id,
      c.first_letter fl,
      c1.name,
      c1.pinyin
    FROM city c
      RIGHT JOIN city c1 ON c.first_letter = c1.first_letter
    ORDER BY fl
  </select>

</mapper>
